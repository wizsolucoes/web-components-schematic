import { Component } from '@angular/core';
import { CommonModule } from '@angular/common';
import { RouterModule } from '@angular/router';

@Component({
  selector: 'app-home-example',
  template: `
    <div class="grid-example-home container-wco">
      <h1 class="display-2 bold"><%= name %></h1>
      <p>Fique por dentro do nosso ecosistema Wizpro</p>
      <div class="grid-example-home__container">
        <div class="grid-example-home__item">
        <div class="cube-loader-container">
            <div class="cube-loader">
              <div class="cube-top"></div>
              <div class="cube-wrapper">
                <span style="--i:0" class="cube-span"></span>
                <span style="--i:1" class="cube-span"></span>
                <span style="--i:2" class="cube-span"></span>
                <span style="--i:3" class="cube-span"></span>
              </div>
            </div>
          </div>
        </div>
        <div class="grid-example-home__slider">
          <ng-container *ngFor="let card of cards; let i = index">
            <div
              class="cardHome__module"
              [ngStyle]="{ '--initialCardHome-delay': i * 100 + 'ms' }"
            >
              <div>
                <h4 class="cardHome__module--title">
                  <i class="material-icons">{{ card.icon }}</i>
                  {{ card.title }}
                </h4>
                <p class="cardHome__module--description">
                  {{ card.description }}
                </p>
              </div>
              <footer class="cardHome__module--action">
                <a
                  [href]="card.link"
                  target="_blank"
                  rel="noopener noreferrer"
                  class="wco-btn btn-sm  btn-basic btn-primary"
                >
                  Acessar
                  <span class="material-icons-round">arrow_forward</span>
                </a>
              </footer>
            </div>
          </ng-container>
        </div>
      </div>
    </div>
    <div>
      <div
        class="
            p-xxxs 
            bg-netraul-50 
            inline-flex 
            flex-col
            mt-md
          "
        style="border-radius: 8px;"
      >
        <h2 class="display-5 bold">Outras informações</h2>
        <p class="display-p">
          Preencha o arquivo <strong><code>/assets/config.json</code></strong>
        </p>
      </div>
    </div>
  `,
  styles: [
    `
    .cube-loader-container {
        display: flex;
        justify-content: center;
        align-items: center;
        height: 100%;
      }
      .cube-loader {
        position: relative;
        /* u can choose any size */
        width: 75px;
        height: 75px;
        transform-style: preserve-3d;
        transform: rotateX(-30deg);
        animation: animate 4s linear infinite;
      }

      @keyframes animate {
        0% {
          transform: rotateX(-30deg) rotateY(0);
        }

        100% {
          transform: rotateX(-30deg) rotateY(360deg);
        }
      }

      .cube-loader .cube-wrapper {
        position: absolute;
        width: 100%;
        height: 100%;
        /* top: 0;
  left: 0; */
        transform-style: preserve-3d;
      }

      .cube-loader .cube-wrapper .cube-span {
        position: absolute;
        width: 100%;
        height: 100%;
        /* top: 0;
  left: 0; */
        /* width 75px / 2 = 37.5px */
        transform: rotateY(calc(90deg * var(--i))) translateZ(37.5px);
        background: linear-gradient(
          to bottom,
          hsl(330, 3.13%, 25.1%) 0%,
          hsl(177.27, 21.71%, 32.06%) 5.5%,
          hsl(176.67, 34.1%, 36.88%) 12.1%,
          hsl(176.61, 42.28%, 40.7%) 19.6%,
          hsl(176.63, 48.32%, 43.88%) 27.9%,
          hsl(176.66, 53.07%, 46.58%) 36.6%,
          hsl(176.7, 56.94%, 48.91%) 45.6%,
          hsl(176.74, 62.39%, 50.91%) 54.6%,
          hsl(176.77, 69.86%, 52.62%) 63.4%,
          hsl(176.8, 76.78%, 54.08%) 71.7%,
          hsl(176.83, 83.02%, 55.29%) 79.4%,
          hsl(176.85, 88.44%, 56.28%) 86.2%,
          hsl(176.86, 92.9%, 57.04%) 91.9%,
          hsl(176.88, 96.24%, 57.59%) 96.3%,
          hsl(176.88, 98.34%, 57.93%) 99%,
          hsl(176.89, 99.07%, 58.04%) 100%
        );
      }

      .cube-top {
        position: absolute;
        width: 75px;
        height: 75px;
        background: hsl(330, 3.13%, 25.1%) 0%;
        /* width 75px / 2 = 37.5px */
        transform: rotateX(90deg) translateZ(37.5px);
        transform-style: preserve-3d;
      }

      .cube-top::before {
        content: '';
        position: absolute;
        /* u can choose any size */
        width: 75px;
        height: 75px;
        background: hsl(176.61, 42.28%, 40.7%) 19.6%;
        transform: translateZ(-90px);
        filter: blur(10px);
        box-shadow: 0 0 10px #323232, 0 0 20px hsl(176.61, 42.28%, 40.7%) 19.6%,
          0 0 30px #323232, 0 0 40px hsl(176.61, 42.28%, 40.7%) 19.6%;
      }
      .grid-example-home__container {
        display: grid;
        gap: var(--wco-spacing-xxs);
        padding: var(--wco-spacing-md);
        grid-template-columns: 200px 1fr;
      }

      .grid-example-home__slider {
        display: grid;
        width: var(--cardsModules-size, 100%);
        grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
        gap: var(--wco-spacing-xxs);
        transition: all 500ms ease-in-out;
        @media screen and (max-width: 1024px) {
          grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
        }

        @media screen and (max-width: 768px) {
          grid-template-columns: 1fr 1fr;
        }

        @media screen and (max-width: 500px) {
          grid-template-columns: 1fr;
        }
      }
      .cardHome__module {
        display: flex;
        flex-direction: column;
        justify-content: space-between;
        align-items: flex-start;
        gap: var(--wco-spacing-xxs);
        padding: var(--wco-spacing-xxs);
        border: 1px solid var(--wco-color-neutral-500);
        background-color: var(--wco-color-neutral-50);
        border-radius: var(--wco-radius-md);
        width: 100%;
        max-width: 300px;
        transform-origin: center;
        transition: all 500ms ease-in-out;
        animation: initialCardHome 500ms ease-in-out
          var(--initialCardHome-delay, 0ms) backwards;
        @keyframes initialCardHome {
          0% {
            transform: translateX(300px);
            opacity: 0;
          }
          100% {
            transform: translateX(0);
            opacity: 1;
          }
        }
        &:has(button:active) {
          border: 1px solid var(--wco-color-primary-600);
          background-color: var(--wco-color-primary-50);
        }
        &--isDEV {
          background-color: var(--wco-color-primary-50);
          border: 1px solid var(--wco-color-primary-500);
          border-style: dashed;
        }
        &--title {
          font-family: var(--wco-font-family);
          font-size: var(--wco-font-size-sm, 18px);
          font-weight: var(--wco-font-weight-bold);
          color: var(--wco-color-neutral-900);
          padding-bottom: var(--wco-spacing-nano);
          line-height: 1;
          letter-spacing: 0.45px;
          display: flex;
          align-items: center;
          gap: var(--wco-spacing-nano);
          i {
            font-size: var(--wco-font-size-xs, 18px);
            line-height: 1;
            color: var(--wco-color-primary-600);
          }
        }
        button {
          span {
            font-size: var(--wco-font-size-xs, 18px);
          }
        }
      }
    `,
  ],
  standalone: true,
  imports: [CommonModule, RouterModule],
})
export class HomeComponent {
  constructor() {
    this.getDataEcosystem();
  }

  public cards: { title: string; description: string; icon: string; link: string }[] = [];

  getDataEcosystem() {
    fetch(
      'https://raw.githubusercontent.com/wizsolucoes/web-components-schematic/master/sripts/data.json'
    )
      .then((response) => {
        return response.json();
      })
      .then((response) => {
        const { data = [] } = response;
        if (data.length > 0) {
          this.cards = data;
        }
      });
  }
}